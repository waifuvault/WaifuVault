on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  go-microservice-build:
    name: Build Go microservices
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install required packages for building the thumbnails module
      - name: Install libvips dependencies for thumbnails
        run: |
          sudo apt-get update
          sudo apt-get install -y libvips-dev build-essential

      # Setup Go
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      # Build the thumbnails module with CGO enabled
      - name: Build thumbnails
        run: |
          cd go/thumbnails
          CGO_ENABLED=1 go build .

      # Build the zipFiles module
      - name: Build zipFiles
        run: |
          cd go/zipFiles
          go build .

  frontend-build:
    name: Build Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend/waifu-vault
    steps:
      - uses: actions/checkout@v4

      # Setup Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          check-latest: true

      - name: Install dependencies
        run: npm install

      - name: Check Prettier formatting
        run: npm run prettier

      - name: Run ESLint
        run: npm run lint

      - name: Type check
        run: npx tsc --noEmit

      - name: Build application
        run: npm run build

  waifuvault-build:
    name: Build Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Setup Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          check-latest: true

      - name: Install dependencies
        run: npm install

      - name: Compile TypeScript
        run: npm run tsc

      - name: Run ESLint
        run: npm run lint

      - name: Format with Prettier
        run: npm run prettier

      - name: Build application
        run: npm run build

      - name: Run migrations
        run: npm run runmigration:ci

      - name: Create files folder
        run: mkdir -p files

      - name: Start tests
        run: npm run start_js:ci